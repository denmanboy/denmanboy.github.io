<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>denman&#39;s blog</title>
  <subtitle>热爱生活，专注技术</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.denman.me/"/>
  <updated>2016-06-28T12:23:07.000Z</updated>
  <id>http://www.denman.me/</id>
  
  <author>
    <name>denman</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>那山，那水，那人</title>
    <link href="http://www.denman.me/2016/06/28/%E9%82%A3%E5%B1%B1%EF%BC%8C%E9%82%A3%E6%B0%B4%EF%BC%8C%E9%82%A3%E4%BA%BA/"/>
    <id>http://www.denman.me/2016/06/28/那山，那水，那人/</id>
    <published>2016-06-28T01:50:27.000Z</published>
    <updated>2016-06-28T12:23:07.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;
















</content>
    
    <summary type="html">
    
      山还是那山，水还是那水，人还是那人
    
    </summary>
    
      <category term="life" scheme="http://www.denman.me/categories/life/"/>
    
    
      <category term="诗词" scheme="http://www.denman.me/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>关于产品的认知(仅抒己见)</title>
    <link href="http://www.denman.me/2016/06/27/%E5%85%B3%E4%BA%8E%E4%BA%A7%E5%93%81%E7%9A%84%E8%AE%A4%E7%9F%A5(%E4%BB%85%E6%8A%92%E5%B7%B1%E8%A7%81)/"/>
    <id>http://www.denman.me/2016/06/27/关于产品的认知(仅抒己见)/</id>
    <published>2016-06-27T05:54:37.000Z</published>
    <updated>2016-06-28T01:29:57.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;

&lt;h2 id=&quot;贴近用户，切入用户最直接的需求&quot;&gt;&lt;a href=&quot;#贴近用户，切入用户最直接的需求&quot; class=&quot;headerlink&quot; title=&quot;贴近用户，切入用户最直接的需求&quot;&gt;&lt;/a&gt;贴近用户，切入用户最直接的需求&lt;/h2&gt;&lt;h2 id=&quot;简单直接-，减少用户学习成本&quot;&gt;&lt;a href=&quot;#简单直接-，减少用户学习成本&quot; class=&quot;headerlink&quot; title=&quot;简单直接 ，减少用户学习成本&quot;&gt;&lt;/a&gt;简单直接 ，减少用户学习成本&lt;/h2&gt;&lt;h2 id=&quot;局部细化，细节处打动用户&quot;&gt;&lt;a href=&quot;#局部细化，细节处打动用户&quot; class=&quot;headerlink&quot; title=&quot;局部细化，细节处打动用户&quot;&gt;&lt;/a&gt;局部细化，细节处打动用户&lt;/h2&gt;&lt;h2 id=&quot;统一风格，统一布局&quot;&gt;&lt;a href=&quot;#统一风格，统一布局&quot; class=&quot;headerlink&quot; title=&quot;统一风格，统一布局&quot;&gt;&lt;/a&gt;统一风格，统一布局&lt;/h2&gt;</content>
    
    <summary type="html">
    
      昨天和清华毕业的大拿，聊了一会天，学的好多东西，特别是对产品，更是有了更深的了解，关于如何设计出一款让用户的喜爱的产品，仅抒己见，不爱请绕道。
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="产品" scheme="http://www.denman.me/tags/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>关于category不能添加实例变量</title>
    <link href="http://www.denman.me/2016/06/23/%E5%85%B3%E4%BA%8Ecategory%E4%B8%8D%E8%83%BD%E6%B7%BB%E5%8A%A0%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F/"/>
    <id>http://www.denman.me/2016/06/23/关于category不能添加实例变量/</id>
    <published>2016-06-22T16:25:04.000Z</published>
    <updated>2016-06-27T07:57:02.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;

&lt;p&gt;&lt;link href=&quot;http://cdn.bootcss.com/highlight.js/8.0/styles/monokai_sublime.min.css&quot; rel=&quot;stylesheet&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;http://cdn.bootcss.com/highlight.js/8.0/highlight.min.js&quot;&gt;&lt;/script&gt;  &lt;/p&gt;
&lt;p&gt;&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;&lt;/p&gt;
&lt;h1 id=&quot;Category&quot;&gt;&lt;a href=&quot;#Category&quot; class=&quot;headerlink&quot; title=&quot;Category&quot;&gt;&lt;/a&gt;Category&lt;/h1&gt;&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;在编写面向对象的程序时，我们经常想为现有的类添加一些新的行为。例如，你设计了一种新的Car，因此需要创建Car类的子类并添加一些有趣的功能。为已经存在的类添加行为时，通常我们采用添加创建子类的方法。&lt;br&gt;&lt;br&gt;不过有时子类并不方便。比方说，你想为&lt;code&gt;NSString&lt;/code&gt;类添加一个新的行为，但是&lt;code&gt;NSString&lt;/code&gt;实际是一个类簇的表面形式，因而为这样的类创建子类会非常困难。&lt;br&gt;&lt;br&gt;利用Object-c的动态运行分配机制，我们可以为现有的类添加方法。这些方法就是Object-c中的&lt;code&gt;Category&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;struct objc_category {
    //category名称
    char *category_name                                      
    //添加category的类名称
    char *class_name        
    //实例方法列表                                
    struct objc_method_list *instance_methods                
    //类方法列表
    struct objc_method_list *class_methods                   
    //协议列表
    struct objc_protocol_list *protocols                     
}                                                            
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;Category的优势&quot;&gt;&lt;a href=&quot;#Category的优势&quot; class=&quot;headerlink&quot; title=&quot;Category的优势&quot;&gt;&lt;/a&gt;Category的优势&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;利用Category分散实现代码&lt;/li&gt;
&lt;li&gt;通过Category创建前向应用&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;Extension&quot;&gt;&lt;a href=&quot;#Extension&quot; class=&quot;headerlink&quot; title=&quot;Extension&quot;&gt;&lt;/a&gt;Extension&lt;/h1&gt;&lt;h2 id=&quot;定义-1&quot;&gt;&lt;a href=&quot;#定义-1&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;Extension就是匿名Category，但是又有着很大的不同。&lt;/p&gt;
&lt;h1 id=&quot;对比&quot;&gt;&lt;a href=&quot;#对比&quot; class=&quot;headerlink&quot; title=&quot;对比&quot;&gt;&lt;/a&gt;对比&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Category可以写在单独一个文件内，也可以写在与之关联的类里面&lt;/li&gt;
&lt;li&gt;Extension必须写在实现文件里  &lt;/li&gt;
&lt;li&gt;Category声明的方法可以不实现.&lt;/li&gt;
&lt;li&gt;Extension里声明的方法必须实现&lt;/li&gt;
&lt;li&gt;Category不能添加实例变量&lt;/li&gt;
&lt;li&gt;Extension可以添加实例变量&lt;/li&gt;
&lt;li&gt;Category是运行时才会执行&lt;/li&gt;
&lt;li&gt;Extension是编译时就会和关联的类一起编译&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;为什么Category不能添加实例变量而Extension可以&quot;&gt;&lt;a href=&quot;#为什么Category不能添加实例变量而Extension可以&quot; class=&quot;headerlink&quot; title=&quot;为什么Category不能添加实例变量而Extension可以&quot;&gt;&lt;/a&gt;为什么Category不能添加实例变量而Extension可以&lt;/h2&gt;&lt;p&gt;其实Category有两个局限性。第一个就是无法向类中添加实例变量，因为Category没有空间容纳实例变量。&lt;br&gt;第二个就是名称冲突，也就是Category中的方法与现有的方法重名。当发生冲突时，类别具有更高的优先级，我们的Category将完全取代初始化方法，导致初始化方法不再可用。&lt;br&gt;&lt;br&gt;为什么Category没有空间容纳实例变量呢？&lt;br&gt;&lt;br&gt;从上面Category说明中我们了解到Category运行时工作的，此时一个类的对象的内存已经布局好了，如果此时向一个类的对象添加实例变量就会扰乱内存布局。因此我们从Category的定义中看到没有容纳实例变量的变量，只有Category名称，类名称，实例方法列表，类方法列表，协议列表&lt;br&gt;&lt;br&gt;而Extension为什么就可以呢？&lt;br&gt;&lt;br&gt;通过上面的对比我们知道Extension是编译时就会和关联的类一起编译，因此可以。&lt;/p&gt;
&lt;h2 id=&quot;通过runtime向类关联对象&quot;&gt;&lt;a href=&quot;#通过runtime向类关联对象&quot; class=&quot;headerlink&quot; title=&quot;通过runtime向类关联对象&quot;&gt;&lt;/a&gt;通过runtime向类关联对象&lt;/h2&gt;&lt;p&gt;虽然Category不能添加实例变量，但是我们可以利用runtime中的关联对象（Associated Object）变相在运行时向一个对象加变量  &lt;/p&gt;
&lt;h1 id=&quot;打赏&quot;&gt;&lt;a href=&quot;#打赏&quot; class=&quot;headerlink&quot; title=&quot;打赏&quot;&gt;&lt;/a&gt;&lt;div align=&quot;center&quot;&gt;&lt;strong&gt;打赏&lt;/strong&gt;&lt;/div&gt;&lt;/h1&gt;&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://cl.ly/3w1c3s0A0w2x/weichat_alipay_pay_middle.jpeg&quot; alt=&quot;image&quot;&gt;&lt;/div&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      category 不能添加实例变量的原因
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="iOS" scheme="http://www.denman.me/tags/iOS/"/>
    
      <category term="category" scheme="http://www.denman.me/tags/category/"/>
    
  </entry>
  
  <entry>
    <title>delegate和block使用的场景</title>
    <link href="http://www.denman.me/2016/06/22/delegate%E5%92%8Cblock%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9C%BA%E6%99%AF/"/>
    <id>http://www.denman.me/2016/06/22/delegate和block使用的场景/</id>
    <published>2016-06-22T11:24:51.000Z</published>
    <updated>2016-06-28T01:48:59.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;

&lt;p&gt;&lt;link href=&quot;http://cdn.bootcss.com/highlight.js/8.0/styles/monokai_sublime.min.css&quot; rel=&quot;stylesheet&quot;&gt;  &lt;/p&gt;
&lt;script src=&quot;http://cdn.bootcss.com/highlight.js/8.0/highlight.min.js&quot;&gt;&lt;/script&gt;  
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;

&lt;p&gt;比较这个两者的使用场景最好的方法就是看Apple-IOSSDK的使用，Apple的文档就是一本用来指导我们如何使用设计模式的指导书。&lt;br&gt;我们需要去研究一下Apple分别是在什么情况下使用delegate和block，如果我们发现了Apple做这种选择的套路，我们就可以构建出一些规则，可以帮助在我们在自己的代码中做相同选择。&lt;/p&gt;
&lt;h2 id=&quot;delegate举例&quot;&gt;&lt;a href=&quot;#delegate举例&quot; class=&quot;headerlink&quot; title=&quot;delegate举例&quot;&gt;&lt;/a&gt;delegate举例&lt;/h2&gt;&lt;p&gt;我们以最常用的tableView为例,看iOSSDK如何设计和使用delegate的   &lt;/p&gt;
&lt;h3 id=&quot;UITableViewDelegate&quot;&gt;&lt;a href=&quot;#UITableViewDelegate&quot; class=&quot;headerlink&quot; title=&quot;UITableViewDelegate&quot;&gt;&lt;/a&gt;UITableViewDelegate&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;@protocol UITableViewDelegate&amp;lt;NSObject, UIScrollViewDelegate&amp;gt;
@optional
 - (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath;
- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section NS_AVAILABLE_IOS(6_0);
- (void)tableView:(UITableView *)tableView willDisplayFooterView:(UIView *)view forSection:(NSInteger)section NS_AVAILABLE_IOS(6_0);
- (void)tableView:(UITableView *)tableView didEndDisplayingCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath*)indexPath NS_AVAILABLE_IOS(6_0);
- (void)tableView:(UITableView *)tableView didEndDisplayingHeaderView:(UIView *)view forSection:(NSInteger)section NS_AVAILABLE_IOS(6_0);
- (void)tableView:(UITableView *)tableView didEndDisplayingFooterView:(UIView *)view forSection:(NSInteger)section NS_AVAILABLE_IOS(6_0);
 @end  
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;UITableViewDataSource&quot;&gt;&lt;a href=&quot;#UITableViewDataSource&quot; class=&quot;headerlink&quot; title=&quot;UITableViewDataSource&quot;&gt;&lt;/a&gt;UITableViewDataSource&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;@protocol UITableViewDataSource&amp;lt;NSObject&amp;gt;
@required

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section;

// Row display. Implementers should *always* try to reuse cells by setting each cell&amp;apos;s reuseIdentifier and querying for available reusable cells with dequeueReusableCellWithIdentifier:
// Cell gets various attributes set automatically based on table (separators) and data source (accessory views, editing controls)

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;

@optional

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView;              // Default is 1 if not implemented

- (nullable NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section;    // fixed font style. use custom view (UILabel) if you want something different
- (nullable NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section;

// Editing

// Individual rows can opt out of having the -editing property set for them. If not implemented, all rows are assumed to be editable.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath;

// Moving/reordering

// Allows the reorder accessory view to optionally be shown for a particular row. By default, the reorder control will be shown only if the datasource implements -tableView:moveRowAtIndexPath:toIndexPath:
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath;

@end
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;delegate分析&quot;&gt;&lt;a href=&quot;#delegate分析&quot; class=&quot;headerlink&quot; title=&quot;delegate分析&quot;&gt;&lt;/a&gt;delegate分析&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;大多数delegate protocols 都拥有几个消息源&lt;br&gt;从上面的tableViewDataSource 我们可以看到，一个tableView如何展示，需要询问代理，有几个section，每个section里面有几行，行高是多少。当然达到这样的需求，也可以为对应每一个事件注册相应的block，显然这种方式是不合理的&lt;/li&gt;
&lt;li&gt;大多数delegate 都有多个回调，用来捕获对象的行为过程&lt;br&gt;特别是系统提供的一些控件来，都有很多delegate回调方法，用来捕获对象的一些行为动作过程，像&lt;code&gt;UITextField&lt;/code&gt;,&lt;code&gt;UISearchBar&lt;/code&gt;,这些控件的一些行为，通过delegate方法告诉delegate控件的一些行为状态。&lt;h1 id=&quot;Block举例&quot;&gt;&lt;a href=&quot;#Block举例&quot; class=&quot;headerlink&quot; title=&quot;Block举例&quot;&gt;&lt;/a&gt;Block举例&lt;/h1&gt;&lt;h1 id=&quot;block分析&quot;&gt;&lt;a href=&quot;#block分析&quot; class=&quot;headerlink&quot; title=&quot;block分析&quot;&gt;&lt;/a&gt;block分析&lt;/h1&gt;&lt;h1 id=&quot;对比&quot;&gt;&lt;a href=&quot;#对比&quot; class=&quot;headerlink&quot; title=&quot;对比&quot;&gt;&lt;/a&gt;对比&lt;/h1&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      开发过程中该选择 blocks or delegates,当我们需要实现回调的时候，使用哪一种方式比较合适呢？”
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="iOS" scheme="http://www.denman.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>NavigationBar自定义BackItem</title>
    <link href="http://www.denman.me/2016/04/20/NavigationBar%E8%87%AA%E5%AE%9A%E4%B9%89BackItem/"/>
    <id>http://www.denman.me/2016/04/20/NavigationBar自定义BackItem/</id>
    <published>2016-04-20T13:20:43.000Z</published>
    <updated>2016-06-26T00:57:21.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="iOS" scheme="http://www.denman.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>2015过年回家</title>
    <link href="http://www.denman.me/2016/02/06/2015%E8%BF%87%E5%B9%B4%E5%9B%9E%E5%AE%B6/"/>
    <id>http://www.denman.me/2016/02/06/2015过年回家/</id>
    <published>2016-02-06T10:13:40.000Z</published>
    <updated>2016-07-10T10:46:57.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;

&lt;div class=&quot;article&quot;&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;&lt;li style=&quot;list-style:none;font-size:25px;height:30px&quot;&gt;二月出来二月归，&lt;/li&gt;&lt;br&gt;&lt;li style=&quot;list-style:none;font-size:25px;height:30px&quot;&gt;一事无成百不堪。&lt;/li&gt;&lt;br&gt;&lt;li style=&quot;list-style:none;font-size:25px;height:30px&quot;&gt;不见天山九千雪，&lt;/li&gt;&lt;br&gt;&lt;li style=&quot;list-style:none;font-size:25px;height:30px&quot;&gt;只见岁月染白头。&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;/div&gt;
















</content>
    
    <summary type="html">
    
      又是一年，感慨万千
    
    </summary>
    
      <category term="life" scheme="http://www.denman.me/categories/life/"/>
    
    
      <category term="诗词" scheme="http://www.denman.me/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>利用runtime容错</title>
    <link href="http://www.denman.me/2015/12/02/%E5%88%A9%E7%94%A8runtime%E5%AE%B9%E9%94%99/"/>
    <id>http://www.denman.me/2015/12/02/利用runtime容错/</id>
    <published>2015-12-02T10:32:41.000Z</published>
    <updated>2016-06-26T00:54:57.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="runtime" scheme="http://www.denman.me/tags/runtime/"/>
    
  </entry>
  
  <entry>
    <title>iOS程序员开发进阶</title>
    <link href="http://www.denman.me/2015/10/21/iOS%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BC%80%E5%8F%91%E8%BF%9B%E9%98%B6/"/>
    <id>http://www.denman.me/2015/10/21/iOS程序员开发进阶/</id>
    <published>2015-10-21T01:37:42.000Z</published>
    <updated>2016-07-27T01:41:39.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;

&lt;h2 id=&quot;iOS9开始的新特性&quot;&gt;&lt;a href=&quot;#iOS9开始的新特性&quot; class=&quot;headerlink&quot; title=&quot;iOS9开始的新特性&quot;&gt;&lt;/a&gt;iOS9开始的新特性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;nonnull__nonnull&lt;/li&gt;
&lt;li&gt;nullable__nonnullable&lt;/li&gt;
&lt;li&gt;null_resettable&lt;/li&gt;
&lt;li&gt;NS_ASSUME_NONNULL_BEGIN \ NS_ASSUME_NONNULL_END&lt;/li&gt;
&lt;li&gt;泛型__contravariant__covariant&lt;/li&gt;
&lt;li&gt;__kindof&lt;/li&gt;
&lt;li&gt;UIWindow&lt;/li&gt;
&lt;li&gt;Storyboard Reference&lt;/li&gt;
&lt;li&gt;UIStackView&lt;/li&gt;
&lt;li&gt;Search API&lt;/li&gt;
&lt;li&gt;3D touch&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;新技术的了解渠道&quot;&gt;&lt;a href=&quot;#新技术的了解渠道&quot; class=&quot;headerlink&quot; title=&quot;新技术的了解渠道&quot;&gt;&lt;/a&gt;新技术的了解渠道&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;WWDC开发者大会视频&lt;/li&gt;
&lt;li&gt;官方文档&lt;ul&gt;
&lt;li&gt;General -&amp;gt; Guides -&amp;gt; iOS x.x API Diffs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;程序员的学习&quot;&gt;&lt;a href=&quot;#程序员的学习&quot; class=&quot;headerlink&quot; title=&quot;程序员的学习&quot;&gt;&lt;/a&gt;程序员的学习&lt;/h2&gt;&lt;h3 id=&quot;iOS技术的学习&quot;&gt;&lt;a href=&quot;#iOS技术的学习&quot; class=&quot;headerlink&quot; title=&quot;iOS技术的学习&quot;&gt;&lt;/a&gt;iOS技术的学习&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;官当文档&lt;ul&gt;
&lt;li&gt;Sample Code(示例代码)&lt;/li&gt;
&lt;li&gt;Guides(指南)&lt;/li&gt;
&lt;li&gt;Reference(API参考)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;博客&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/list_69_1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaChina&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ios.jobbole.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;伯乐在线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://objccn.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;objc中国&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tangqiaoboy/iOSBlogCN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;优秀博客汇总&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;微博&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://weibo.com/kaifazhetoutiao&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者头条&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weibo.com/cocoachina&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaChina&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weibo.com/luohanchenyilong&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS程序犭袁&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weibo.com/tangqiaoboy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;唐巧_boy&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weibo.com/u/1364395395&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我就叫Sunny怎么了&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.ibireme.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ibireme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weibo.com/710312327&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KITTEN-YANG&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weibo.com/exceptions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;微信公众号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS开发(iosDevTips)&lt;/li&gt;
&lt;li&gt;iOS开发(iOSDevTip)&lt;/li&gt;
&lt;li&gt;iOS技术分享(iosinfo)&lt;/li&gt;
&lt;li&gt;猿圈(CodePush) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他&lt;ul&gt;
&lt;li&gt;多写技术博客(简书\个人博客站点)&lt;/li&gt;
&lt;li&gt;参加一些技术分享活动(北京\上海\广州\杭州)&lt;/li&gt;
&lt;li&gt;有自己的技术圈子&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;非iOS技术的学习&quot;&gt;&lt;a href=&quot;#非iOS技术的学习&quot; class=&quot;headerlink&quot; title=&quot;非iOS技术的学习&quot;&gt;&lt;/a&gt;非iOS技术的学习&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;数据结构与算法(比如加密算法等等)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Java(Android\JavaEE)&lt;/li&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;非技术的学习&quot;&gt;&lt;a href=&quot;#非技术的学习&quot; class=&quot;headerlink&quot; title=&quot;非技术的学习&quot;&gt;&lt;/a&gt;非技术的学习&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;管理\心理学\幸福\创业\历史&lt;/li&gt;
&lt;li&gt;网易公开课&lt;ul&gt;
&lt;li&gt;各种国际名牌大学的课堂视频&lt;/li&gt;
&lt;li&gt;名人讲座(TED)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;名人讲座\名人访谈&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      iOS9新的特性，及iOS程序员开发进阶
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="iOS" scheme="http://www.denman.me/tags/iOS/"/>
    
      <category term="iOS9" scheme="http://www.denman.me/tags/iOS9/"/>
    
  </entry>
  
  <entry>
    <title>关于runLoop那些事</title>
    <link href="http://www.denman.me/2015/10/12/%E5%85%B3%E4%BA%8ErunLoop%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://www.denman.me/2015/10/12/关于runLoop那些事/</id>
    <published>2015-10-11T16:21:09.000Z</published>
    <updated>2016-06-26T00:54:24.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="runLoop" scheme="http://www.denman.me/tags/runLoop/"/>
    
  </entry>
  
  <entry>
    <title>Masonry框架分析-链式编程思想</title>
    <link href="http://www.denman.me/2015/09/18/Masonry%E6%A1%86%E6%9E%B6%E5%88%86%E6%9E%90-%E9%93%BE%E5%BC%8F%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    <id>http://www.denman.me/2015/09/18/Masonry框架分析-链式编程思想/</id>
    <published>2015-09-18T10:47:07.000Z</published>
    <updated>2016-06-26T00:57:10.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TouchID简易开发教程</title>
    <link href="http://www.denman.me/2015/07/27/Touch%20ID%E7%AE%80%E6%98%93%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/"/>
    <id>http://www.denman.me/2015/07/27/Touch ID简易开发教程/</id>
    <published>2015-07-27T01:46:51.000Z</published>
    <updated>2016-07-27T01:50:17.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Touch-ID-简易开发教程&quot;&gt;&lt;a href=&quot;#Touch-ID-简易开发教程&quot; class=&quot;headerlink&quot; title=&quot;Touch ID 简易开发教程&quot;&gt;&lt;/a&gt;Touch ID 简易开发教程&lt;/h1&gt;&lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;h4 id=&quot;支持系统和机型&quot;&gt;&lt;a href=&quot;#支持系统和机型&quot; class=&quot;headerlink&quot; title=&quot;支持系统和机型&quot;&gt;&lt;/a&gt;支持系统和机型&lt;/h4&gt;&lt;p&gt;iOS系统的指纹识别功能最低支持的机型为&lt;code&gt;iPhone 5s&lt;/code&gt;，最低支持系统为&lt;code&gt;iOS 8&lt;/code&gt;，虽然安装&lt;code&gt;iOS 7系统的5s&lt;/code&gt;机型可以使用系统提供的指纹解锁功能，但由于&lt;code&gt;API&lt;/code&gt;并未开放，所以理论上第三方软件不可使用。&lt;/p&gt;
&lt;h4 id=&quot;依赖框架&quot;&gt;&lt;a href=&quot;#依赖框架&quot; class=&quot;headerlink&quot; title=&quot;依赖框架&quot;&gt;&lt;/a&gt;依赖框架&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LocalAuthentication.framework&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;LocalAuthentication/LocalAuthentication.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h4&gt;&lt;p&gt;做&lt;code&gt;iOS 8以下&lt;/code&gt;版本适配时，务必进行&lt;code&gt;API验证&lt;/code&gt;，避免调用相关API引起崩溃。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(iOS8)&amp;#123;xxx&amp;#125; &lt;span class=&quot;comment&quot;&gt;// 系统版本验证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([myContext canEvaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics error:&amp;amp;authError])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用类&quot;&gt;&lt;a href=&quot;#使用类&quot; class=&quot;headerlink&quot; title=&quot;使用类&quot;&gt;&lt;/a&gt;使用类&lt;/h4&gt;&lt;p&gt;&lt;code&gt;LAContext&lt;/code&gt; 指纹验证操作对象&lt;/p&gt;
&lt;h4 id=&quot;操作流程&quot;&gt;&lt;a href=&quot;#操作流程&quot; class=&quot;headerlink&quot; title=&quot;操作流程&quot;&gt;&lt;/a&gt;操作流程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;判断系统版本，iOS 8及以上版本执行-(void)authenticateUser方法，&lt;/li&gt;
&lt;li&gt;方法自动判断设备是否支持和开启Touch ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;代码示例&quot;&gt;&lt;a href=&quot;#代码示例&quot; class=&quot;headerlink&quot; title=&quot;代码示例&quot;&gt;&lt;/a&gt;代码示例&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;IBAction&lt;/span&gt;)showTouchIDAlert:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)sender &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 1.判断是否是iOS8之后&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!iOS8later) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;版本不对不能使用TouchID&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 2.调用touchID的相关方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; authenticateUser];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 鉴定用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)authenticateUser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 创建指纹验证对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LAContext *context = [[LAContext alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *yfError = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 验证设备是否支持touchID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// LAPolicyDeviceOwnerAuthenticationWithBiometrics 14年时候枚举只有这一个属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// LAPolicyDeviceOwnerAuthentication 后来加的枚举属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([context canEvaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics error:&amp;amp;yfError]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 支持touchID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [context evaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                localizedReason:&lt;span class=&quot;string&quot;&gt;@&quot;XMGlocalizedReason&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          reply:^(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; success, &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; * _Nullable error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (success) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &lt;span class=&quot;comment&quot;&gt;// touchID验证成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &lt;span class=&quot;comment&quot;&gt;// 继续处理相关业务(注意线程)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,error.localizedDescription);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (error.code) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LAErrorSystemCancel:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Authentication was cancelled by the system&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;comment&quot;&gt;//切换到其他APP，系统取消验证Touch ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LAErrorUserCancel:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Authentication was cancelled by the user&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;comment&quot;&gt;//用户取消验证Touch ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LAErrorUserFallback:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;User selected to enter custom password&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          [[&lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; mainQueue] addOperationWithBlock:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              &lt;span class=&quot;comment&quot;&gt;//用户选择输入密码，切换主线程处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          [[&lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; mainQueue] addOperationWithBlock:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              &lt;span class=&quot;comment&quot;&gt;//其他情况，切换主线程处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (yfError.code) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LAErrorTouchIDNotEnrolled:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;LAErrorTouchIDNotEnrolled&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LAErrorPasscodeNotSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;LAErrorPasscodeNotSet&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 此处触发showPasscodeResetAlert方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Touch ID is unaviliable&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, yfError.localizedDescription);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; typedef NS_ENUM(NSInteger, LAError)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //授权失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; LAErrorAuthenticationFailed = kLAErrorAuthenticationFailed,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //用户取消Touch ID授权&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; LAErrorUserCancel           = kLAErrorUserCancel,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //用户选择输入密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; LAErrorUserFallback         = kLAErrorUserFallback,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //系统取消授权(例如其他APP切入)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; LAErrorSystemCancel         = kLAErrorSystemCancel,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //系统未设置密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; LAErrorPasscodeNotSet       = kLAErrorPasscodeNotSet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //设备Touch ID不可用，例如未打开&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; LAErrorTouchIDNotAvailable  = kLAErrorTouchIDNotAvailable,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //设备Touch ID不可用，用户未录入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; LAErrorTouchIDNotEnrolled   = kLAErrorTouchIDNotEnrolled,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; NS_ENUM_AVAILABLE(10_10, 8_0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      简单介绍一下TouchID开发
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="iOS" scheme="http://www.denman.me/tags/iOS/"/>
    
      <category term="Touch ID" scheme="http://www.denman.me/tags/Touch-ID/"/>
    
  </entry>
  
  <entry>
    <title>OC中方法和函数的区别</title>
    <link href="http://www.denman.me/2015/07/18/%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.denman.me/2015/07/18/方法和函数的区别/</id>
    <published>2015-07-17T16:21:46.000Z</published>
    <updated>2016-06-27T07:56:51.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;

&lt;p&gt;&lt;link href=&quot;http://cdn.bootcss.com/highlight.js/8.0/styles/monokai_sublime.min.css&quot; rel=&quot;stylesheet&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;http://cdn.bootcss.com/highlight.js/8.0/highlight.min.js&quot;&gt;&lt;/script&gt;  &lt;/p&gt;
&lt;p&gt;&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;&lt;/p&gt;
&lt;h1 id=&quot;关于方法和函数&quot;&gt;&lt;a href=&quot;#关于方法和函数&quot; class=&quot;headerlink&quot; title=&quot;关于方法和函数&quot;&gt;&lt;/a&gt;关于方法和函数&lt;/h1&gt;&lt;p&gt;通常我们来讲对实现某一具体功能的代码端我们称之为函数抑或方法.&lt;br&gt;但是方法和函数是有严格区别的，特别是在Objective-c 这样一门动态的一门语言&lt;/p&gt;
&lt;h2 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h2&gt;&lt;p&gt;通常我们口语中方法和函数基本上就是一回事，如下面的例子&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- (int)sum:(int)a AndB:(int)b  
{
    return  a + b;  
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 我们看到这就定义了一个方法或者函数，但是真的就是这样吗？&lt;br&gt; 其实严格说来上面定义了一个函数，而不是方法，而方法指的仅仅是函数的名字，也就是&lt;code&gt;sum:  AndB:&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Objective-c中方法&quot;&gt;&lt;a href=&quot;#Objective-c中方法&quot; class=&quot;headerlink&quot; title=&quot;Objective-c中方法&quot;&gt;&lt;/a&gt;Objective-c中方法&lt;/h3&gt;&lt;p&gt;Objective-c中的方法就是我门常用的&lt;code&gt;selector&lt;/code&gt;,一个&lt;code&gt;selector&lt;/code&gt;就是Objective-c的函数名字&lt;/p&gt;
&lt;h2 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h2&gt;&lt;p&gt;我们看一个在Objective-c函数的定义&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;struct objc_method 
{
    SEL method_name
    char *method_types
    IMP method_imp
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一个函数包含了函数的名字&lt;code&gt;method_name&lt;/code&gt;，函数的类型&lt;code&gt;method_types&lt;/code&gt;以及&lt;code&gt;IMP&lt;/code&gt;(函数的实现)，    Objective-c，通过函数的名字以及所传参数就能找到函数的实现，继而执行函数的实现.&lt;br&gt;&lt;br&gt;其中method_types 是函数的签名，也就是函数类型，包含几个参数，每个参数的类型，以及返回值的类型，看这样一个类&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@interface NSMethodSignature : NSObject {
@private
    void *_private;
    void *_reserved[6];
}

+ (nullable NSMethodSignature *)signatureWithObjCTypes:(const char *)types;
@property (readonly) NSUInteger numberOfArguments;
- (const char *)getArgumentTypeAtIndex:(NSUInteger)idx NS_RETURNS_INNER_POINTER;
@property (readonly) NSUInteger frameLength;
- (BOOL)isOneway;
@property (readonly) const char *methodReturnType NS_RETURNS_INNER_POINTER;
@property (readonly) NSUInteger methodReturnLength;

@end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 这个类就是函数签名类，包含参数的数量，每个参数的类型，函数返回值类型&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;打赏&quot;&gt;&lt;a href=&quot;#打赏&quot; class=&quot;headerlink&quot; title=&quot;打赏&quot;&gt;&lt;/a&gt;&lt;div align=&quot;center&quot;&gt;&lt;strong&gt;打赏&lt;/strong&gt;&lt;/div&gt;&lt;/h1&gt;&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://cl.ly/3w1c3s0A0w2x/weichat_alipay_pay_middle.jpeg&quot; alt=&quot;image&quot;&gt;&lt;/div&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      通常我们来讲对实现某一具体功能的代码端我们称之为函数抑或方法.&lt;br&gt;但是方法和函数是有严格区别的，特别是在Objective-c 这样一门动态的一门语言
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="方法" scheme="http://www.denman.me/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="函数" scheme="http://www.denman.me/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>tableView优化的那些事</title>
    <link href="http://www.denman.me/2015/07/08/tableView%E4%BC%98%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://www.denman.me/2015/07/08/tableView优化的那些事/</id>
    <published>2015-07-08T10:33:08.000Z</published>
    <updated>2016-06-26T00:57:51.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="tableView" scheme="http://www.denman.me/tags/tableView/"/>
    
      <category term="优化" scheme="http://www.denman.me/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>关于git的使用</title>
    <link href="http://www.denman.me/2015/04/20/%E5%85%B3%E4%BA%8Egit%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.denman.me/2015/04/20/关于git的使用/</id>
    <published>2015-04-20T07:06:48.000Z</published>
    <updated>2016-06-26T00:53:57.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="iOS" scheme="http://www.denman.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS中蓝牙开发常用的框架</title>
    <link href="http://www.denman.me/2015/04/14/iOS%E4%B8%AD%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E7%9A%84%E6%A1%86%E6%9E%B6/"/>
    <id>http://www.denman.me/2015/04/14/iOS中蓝牙开发常用的框架/</id>
    <published>2015-04-14T01:43:47.000Z</published>
    <updated>2016-07-27T01:45:02.000Z</updated>
    
    <content type="html">&lt;script&gt;
(function(){
    var bp = document.createElement(&#39;script&#39;);
    var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];
    if (curProtocol === &#39;https&#39;) {
        bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;;        
    }
    else {
        bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;;
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;

&lt;h1 id=&quot;iOS中的蓝牙常用的框架&quot;&gt;&lt;a href=&quot;#iOS中的蓝牙常用的框架&quot; class=&quot;headerlink&quot; title=&quot;iOS中的蓝牙常用的框架&quot;&gt;&lt;/a&gt;iOS中的蓝牙常用的框架&lt;/h1&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;h4 id=&quot;iOS中提供了4个框架用于实现蓝牙连接&quot;&gt;&lt;a href=&quot;#iOS中提供了4个框架用于实现蓝牙连接&quot; class=&quot;headerlink&quot; title=&quot;iOS中提供了4个框架用于实现蓝牙连接&quot;&gt;&lt;/a&gt;iOS中提供了4个框架用于实现蓝牙连接&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.GameKit.framework(用法简单)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;只能用于iOS设备之间的同个应用内连接&lt;/code&gt;,多用于游戏(eg.拳皇,棋牌类),从&lt;code&gt;iOS7开始过期&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.MultipeerConnectivity.framework(代替1)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;只能用于iOS设备之间的连接,从iOS7开始引入&lt;/code&gt;,主要用于&lt;code&gt;非联网状态&lt;/code&gt;下,通过wifi或者蓝牙进行文件共享(仅限于沙盒的文件),多用于附近无网聊天&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.ExternalAccessory.framework(MFi)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;可用于第三方蓝牙设备交互&lt;/code&gt;,但是蓝牙设备必须经过&lt;code&gt;苹果MFi认证&lt;/code&gt;(国内很少)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4.CoreBluetooth.framework（时下热门)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;可用于第三方蓝牙设备交互&lt;/code&gt;,必须要支持蓝牙4.0&lt;/li&gt;
&lt;li&gt;硬件至少是4s,系统至少是iOS6&lt;/li&gt;
&lt;li&gt;蓝牙4.0以低功耗著称,一般也叫BLE（Bluetooth Low Energy）&lt;/li&gt;
&lt;li&gt;目前应用比较多的案例:运动手环,嵌入式设备,智能家居&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;设计到的系统-框架&quot;&gt;&lt;a href=&quot;#设计到的系统-框架&quot; class=&quot;headerlink&quot; title=&quot;设计到的系统/框架&quot;&gt;&lt;/a&gt;设计到的系统/框架&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;HealthKit/物联网HomeKit/wathOS1,2/iBeacon&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      iOS中的蓝牙常用的框架
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="iOS" scheme="http://www.denman.me/tags/iOS/"/>
    
      <category term="蓝牙" scheme="http://www.denman.me/tags/%E8%93%9D%E7%89%99/"/>
    
  </entry>
  
  <entry>
    <title>Xcode常用的插件</title>
    <link href="http://www.denman.me/2015/04/12/Xcode%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.denman.me/2015/04/12/Xcode常用的插件/</id>
    <published>2015-04-11T16:28:18.000Z</published>
    <updated>2016-06-26T00:58:34.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>思念同学</title>
    <link href="http://www.denman.me/2015/03/06/%E6%80%9D%E5%BF%B5%E5%90%8C%E5%AD%A6/"/>
    <id>http://www.denman.me/2015/03/06/思念同学/</id>
    <published>2015-03-06T07:26:31.000Z</published>
    <updated>2016-06-21T07:11:13.000Z</updated>
    
    <content type="html">&lt;p&gt;去年今日今时月，&lt;/p&gt;
&lt;p&gt;同照你我苍白身。&lt;/p&gt;
&lt;p&gt;今年今日今时月，&lt;/p&gt;
&lt;p&gt;不见天涯万里人。&lt;/p&gt;
&lt;p&gt;他年今日同相见 ，&lt;/p&gt;
&lt;p&gt;月光长照酒杯中，&lt;/p&gt;
&lt;p&gt;一喝黄河八百里，&lt;/p&gt;
&lt;p&gt;二喝长江九曲湾。&lt;/p&gt;
&lt;p&gt;但愿长醉不复醒，&lt;/p&gt;
&lt;p&gt;梦中犹醉见杜康。&lt;/p&gt;
&lt;p&gt;杜康问我有何事，&lt;/p&gt;
&lt;p&gt;是否有酒共一杯。&lt;/p&gt;
&lt;h1 id=&quot;打赏&quot;&gt;&lt;a href=&quot;#打赏&quot; class=&quot;headerlink&quot; title=&quot;打赏&quot;&gt;&lt;/a&gt;&lt;div align=&quot;center&quot;&gt;&lt;strong&gt;打赏&lt;/strong&gt;&lt;/div&gt;&lt;/h1&gt;&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://cl.ly/3w1c3s0A0w2x/weichat_alipay_pay_middle.jpeg&quot; alt=&quot;image&quot;&gt;&lt;/div&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      不知不觉毕业已经好长时间了，写下此篇文章，思念大学的同学
    
    </summary>
    
      <category term="life" scheme="http://www.denman.me/categories/life/"/>
    
    
      <category term="诗词" scheme="http://www.denman.me/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>?:和Swift中??异曲同工</title>
    <link href="http://www.denman.me/2015/01/12/%E5%92%8CSwift%E4%B8%AD-%E5%BC%82%E6%9B%B2%E5%90%8C%E5%B7%A5/"/>
    <id>http://www.denman.me/2015/01/12/和Swift中-异曲同工/</id>
    <published>2015-01-12T09:08:57.000Z</published>
    <updated>2016-07-10T10:41:17.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;script&gt;&lt;br&gt;(function(){&lt;br&gt;    var bp = document.createElement(‘script’);&lt;br&gt;    var curProtocol = window.location.protocol.split(‘:’)[0];&lt;br&gt;    if (curProtocol === ‘https’) {&lt;br&gt;        bp.src = ‘&lt;a href=&quot;https://zz.bdstatic.com/linksubmit/push.js&quot;&gt;https://zz.bdstatic.com/linksubmit/push.js&lt;/a&gt;‘;&lt;br&gt;    }&lt;br&gt;    else {&lt;br&gt;        bp.src = ‘&lt;a href=&quot;http://push.zhanzhang.baidu.com/push.js&quot;&gt;http://push.zhanzhang.baidu.com/push.js&lt;/a&gt;‘;&lt;br&gt;    }&lt;br&gt;    var s = document.getElementsByTagName(“script”)[0];&lt;br&gt;    s.parentNode.insertBefore(bp, s);&lt;br&gt;})();&lt;br&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;&lt;link href=&quot;http://cdn.bootcss.com/highlight.js/8.0/styles/monokai_sublime.min.css&quot; rel=&quot;stylesheet&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;http://cdn.bootcss.com/highlight.js/8.0/highlight.min.js&quot;&gt;&lt;/script&gt;  &lt;/p&gt;
&lt;p&gt;&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;??&quot;&gt;&lt;/a&gt;??&lt;/h2&gt;&lt;p&gt;可选类型数值如果为空是，不能参与运算的，所以在使用之前要对它进行判断非空操。空合并运算符用于对可选类型进行空判断，如果包含值就对可选常量/变量进行解包，如果为nil则返回式默认值。空合并运算符使用默认值替换nil值，处nil值的情况。保证了表达式一定有值，提高程序的健壮性。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a ?? b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;它是对一下表达式的简单表达方式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a != nil ? a! : b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当可选类型a 不为空时，对a进行强制解包，取出a的值。反之，当a为空时，返回默认的b值。其中b可以是字面量，常量，变量，或者表达式，都可以。&lt;/p&gt;
&lt;p&gt;？？ 有两个条件&lt;/p&gt;
&lt;p&gt;表达式a必须是可选类型&lt;/p&gt;
&lt;p&gt;默认值b的数据类型必须和a的值数据类型一致&lt;/p&gt;
&lt;h1 id=&quot;-1&quot;&gt;&lt;a href=&quot;#-1&quot; class=&quot;headerlink&quot; title=&quot;?:&quot;&gt;&lt;/a&gt;?:&lt;/h1&gt;&lt;p&gt;?: 是条件表达式式 ，是唯一的一个三元运算符，其实他是对下面表达式的简写&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int a = 2;
int b = 3;
int c;
//条件表达式
//c = a &amp;gt; b ? a : b ;
//if-eles 条件判断
if (a &amp;gt; b) {
    c = a;
}else{
    c = b;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一般我们常用?: 简写if-else判断，增进写代码的速度，其实?: 还有一个和Swift中?? 相似的作用，用作二元表达式，用来返回默认值，例如，有时做网络请求时，服务器返回为空，但是我们UI见面不能显示为空，就显示一个默认值。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NSString *UIString = serverString ?: @&amp;quot;defultString&amp;quot;;
//等价于
NSString *UIString = serverString ? serverString : @&amp;quot;defultString&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;鉴于以上对?: 做过二元运算符的使用，在使用block时我们每次都要做判断是否为空，如下？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//先判断是否为空，再调用block
if (block) {
    block();
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可用二元表达式简写如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;!block ?: block()
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      ?:(条件表达式) 条件表达式的另类用法，和Swift中的??(空合并运算符)
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="Swift" scheme="http://www.denman.me/tags/Swift/"/>
    
      <category term="[object Object]" scheme="http://www.denman.me/tags/object-Object/"/>
    
  </entry>
  
  <entry>
    <title>关于runtime那些事</title>
    <link href="http://www.denman.me/2014/12/23/%E5%85%B3%E4%BA%8Eruntime%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://www.denman.me/2014/12/23/关于runtime那些事/</id>
    <published>2014-12-22T16:20:34.000Z</published>
    <updated>2016-06-26T00:55:29.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="rumtime" scheme="http://www.denman.me/tags/rumtime/"/>
    
  </entry>
  
  <entry>
    <title>关于block的那些事</title>
    <link href="http://www.denman.me/2014/11/18/%E5%85%B3%E4%BA%8Eblock%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://www.denman.me/2014/11/18/关于block的那些事/</id>
    <published>2014-11-17T16:26:47.000Z</published>
    <updated>2016-06-26T00:52:51.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="technology" scheme="http://www.denman.me/categories/technology/"/>
    
    
      <category term="block" scheme="http://www.denman.me/tags/block/"/>
    
  </entry>
  
</feed>
